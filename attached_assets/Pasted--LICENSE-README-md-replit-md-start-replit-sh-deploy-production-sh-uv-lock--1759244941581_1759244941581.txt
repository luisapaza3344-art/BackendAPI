.
â”œâ”€â”€ LICENSE
â”œâ”€â”€ README.md
â”œâ”€â”€ replit.md
â”œâ”€â”€ start-replit.sh
â”œâ”€â”€ deploy-production.sh
â”œâ”€â”€ uv.lock
â”œâ”€â”€ package.json
â”œâ”€â”€ package-lock.json
â”œâ”€â”€ pyproject.toml
â”œâ”€â”€ flake.nix                          # Entorno de desarrollo reproducible (opcional pero recomendado)

# ðŸ‘‡ DocumentaciÃ³n viva y decisiones arquitectÃ³nicas
â”œâ”€â”€ docs/
â”‚   â”œâ”€â”€ adr/                           # Architecture Decision Records
â”‚   â”œâ”€â”€ compliance/                    # Mapeo a PCI DSS, GDPR, NIST PQC
â”‚   â”œâ”€â”€ threat-models/
â”‚   â””â”€â”€ runbooks/

# ðŸ‘‡ Activos seguros (renombrado y organizado)
â”œâ”€â”€ assets/
â”‚   â””â”€â”€ security-briefs/
â”‚       â””â”€â”€ CISO-security-team-brief.txt

# ðŸ‘‡ Aplicaciones frontend (con roles diferenciados)
â”œâ”€â”€ apps/
â”‚   â”œâ”€â”€ store/                         # Para compradores: sin 2FA obligatorio
â”‚   â”‚   â”œâ”€â”€ public/
â”‚   â”‚   â”œâ”€â”€ src/
â”‚   â”‚   â”‚   â”œâ”€â”€ services/
â”‚   â”‚   â”‚   â”‚   â”œâ”€â”€ auth.service.ts    # Usa /api/auth/login (tu servicio auth)
â”‚   â”‚   â”‚   â”‚   â””â”€â”€ payment.service.ts
â”‚   â”‚   â”‚   â””â”€â”€ ...
â”‚   â”‚   â””â”€â”€ ...
â”‚   â”‚
â”‚   â”œâ”€â”€ merchant-portal/               # Para vendedores: 2FA obligatorio
â”‚   â”‚   â”œâ”€â”€ src/
â”‚   â”‚   â”‚   â”œâ”€â”€ services/
â”‚   â”‚   â”‚   â”‚   â”œâ”€â”€ auth.service.ts    # Usa /api/auth/login + /api/auth/2fa (tu auth)
â”‚   â”‚   â”‚   â”‚   â””â”€â”€ dashboard.service.ts
â”‚   â”‚   â”‚   â””â”€â”€ ...
â”‚   â”‚   â””â”€â”€ ...
â”‚   â”‚
â”‚   â””â”€â”€ admin-console/                 # Interno: 2FA + mTLS
â”‚       â””â”€â”€ ...

# ðŸ‘‡ Servicios backend (dominios claros, sin mezclar lenguajes)
â”œâ”€â”€ services/
â”‚   â”œâ”€â”€ auth/                          # ðŸ”’ TU CARPETA AUTH â€” SIN CAMBIOS
â”‚   â”‚   â”œâ”€â”€ cmd/
â”‚   â”‚   â”œâ”€â”€ db/migrations/
â”‚   â”‚   â”œâ”€â”€ go.mod
â”‚   â”‚   â”œâ”€â”€ go.sum
â”‚   â”‚   â””â”€â”€ internal/
â”‚   â”‚       â”œâ”€â”€ app/
â”‚   â”‚       â”œâ”€â”€ config/
â”‚   â”‚       â”œâ”€â”€ database/
â”‚   â”‚       â”œâ”€â”€ did/                   # (puedes dejarlo o eliminarlo; no lo usamos)
â”‚   â”‚       â”œâ”€â”€ handlers/
â”‚   â”‚       â”œâ”€â”€ logger/
â”‚   â”‚       â”œâ”€â”€ middleware/
â”‚   â”‚       â””â”€â”€ webauthn/
â”‚   â”‚
â”‚   â”œâ”€â”€ payments/                      # Gateway de pagos (PCI DSS Scope)
â”‚   â”‚   â”œâ”€â”€ src/                       # Rust (como tenÃ­as)
â”‚   â”‚   â”œâ”€â”€ migrations/
â”‚   â”‚   â””â”€â”€ Cargo.toml
â”‚   â”‚
â”‚   â”œâ”€â”€ fraud/                         # DetecciÃ³n de fraude
â”‚   â”‚   â”œâ”€â”€ python/
â”‚   â”‚   â””â”€â”€ models/
â”‚   â”‚
â”‚   â”œâ”€â”€ rbac/                          # Control de acceso por rol
â”‚   â”‚   â””â”€â”€ go/
â”‚   â”‚
â”‚   â”œâ”€â”€ attestation/                   # Attestation de integridad
â”‚   â”‚   â””â”€â”€ go/
â”‚   â”‚
â”‚   â”œâ”€â”€ messaging/                     # Cola de mensajes
â”‚   â”‚   â””â”€â”€ python/
â”‚   â”‚
â”‚   â””â”€â”€ shipping/                      # GestiÃ³n de envÃ­os
â”‚       â””â”€â”€ rust/

# ðŸ‘‡ NÃºcleo compartido post-cuÃ¡ntico (seguro, verificado, reutilizable)
â”œâ”€â”€ shared/
â”‚   â””â”€â”€ crypto-pqc/
â”‚       â”œâ”€â”€ go/                        # LibrerÃ­a Go con OQS + modos hÃ­bridos
â”‚       â”œâ”€â”€ rust/                      # Crate con pqcrypto
â”‚       â””â”€â”€ typescript/                # Para frontend (WebCrypto + fallback)

# ðŸ‘‡ Infraestructura como cÃ³digo (GitOps-first)
â”œâ”€â”€ infra/
â”‚   â”œâ”€â”€ aws/
â”‚   â”‚   â””â”€â”€ modules/
â”‚   â”œâ”€â”€ k8s/
â”‚   â”‚   â””â”€â”€ charts/
â”‚   â””â”€â”€ policy/                        # OPA, Kyverno, polÃ­ticas de red

# ðŸ‘‡ Observabilidad segura
â”œâ”€â”€ observability/
â”‚   â”œâ”€â”€ grafana/dashboards/
â”‚   â”œâ”€â”€ loki/configurations/
â”‚   â””â”€â”€ prometheus/rules/

# ðŸ‘‡ Cumplimiento y seguridad
â”œâ”€â”€ compliance/
â”‚   â”œâ”€â”€ evidence/                      # Para auditores
â”‚   â””â”€â”€ scanners/                      # ConfiguraciÃ³n de escÃ¡neres

# ðŸ‘‡ Pruebas (por dominio y tipo)
â”œâ”€â”€ tests/
â”‚   â”œâ”€â”€ unit/
â”‚   â”œâ”€â”€ integration/
â”‚   â”œâ”€â”€ e2e/
â”‚   â”œâ”€â”€ security/                      # Pruebas de penetraciÃ³n
â”‚   â””â”€â”€ quantum/                       # SimulaciÃ³n de amenazas cuÃ¡nticas

# ðŸ‘‡ Herramientas y scripts
â”œâ”€â”€ tools/
â”‚   â”œâ”€â”€ pq-migrator/
â”‚   â””â”€â”€ key-rotator/

# ðŸ‘‡ ConfiguraciÃ³n global (segura)
â”œâ”€â”€ config/
â”‚   â”œâ”€â”€ base/
â”‚   â””â”€â”€ environments/

# ðŸ‘‡ Archivos raÃ­z esenciales
â”œâ”€â”€ .gitignore
â”œâ”€â”€ .dockerignore
â”œâ”€â”€ Taskfile.yml
â””â”€â”€ .sovereign.lock                    # Lista de dependencias permitidas (con algoritmos PQC)